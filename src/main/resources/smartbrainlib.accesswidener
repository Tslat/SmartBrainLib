accessWidener v1 named
accessible field net/minecraft/world/entity/ai/Brain sensors Ljava/util/Map;
accessible method net/minecraft/world/entity/ai/Brain memories ()Ljava/util/stream/Stream;
accessible field net/minecraft/world/entity/ai/Brain memories Ljava/util/Map;
accessible field net/minecraft/world/entity/ai/Brain activityRequirements Ljava/util/Map;
accessible field net/minecraft/world/entity/ai/Brain activityMemoriesToEraseWhenStopped Ljava/util/Map;
accessible field net/minecraft/world/entity/ai/Brain availableBehaviorsByPriority Ljava/util/Map;
accessible field net/minecraft/world/entity/ai/behavior/Behavior entryCondition Ljava/util/Map;
accessible class net/minecraft/world/entity/ai/Brain$Provider
extendable class net/minecraft/world/entity/ai/Brain$Provider
accessible method net/minecraft/world/entity/ai/Brain$Provider <init> (Ljava/util/Collection;Ljava/util/Collection;)V
accessible method net/minecraft/world/entity/ai/Brain setMemoryInternal (Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V
accessible method net/minecraft/world/entity/ai/Brain$MemoryValue setMemoryInternal (Lnet/minecraft/world/entity/ai/Brain;)V
accessible method net/minecraft/world/entity/ai/Brain forgetOutdatedMemories ()V
extendable method net/minecraft/world/entity/ai/Brain forgetOutdatedMemories ()V
accessible field net/minecraft/world/entity/ai/Brain coreActivities Ljava/util/Set;
accessible method net/minecraft/world/entity/ai/Brain setCoreActivities (Ljava/util/Set;)V

# Behaviour
accessible method net/minecraft/world/entity/ai/behavior/Behavior tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z
extendable method net/minecraft/world/entity/ai/behavior/Behavior tryStart (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z
accessible field net/minecraft/world/entity/ai/behavior/Behavior endTimestamp J
accessible field net/minecraft/world/entity/ai/behavior/Behavior status Lnet/minecraft/world/entity/ai/behavior/Behavior$Status;
accessible method net/minecraft/world/entity/ai/behavior/Behavior getStatus ()Lnet/minecraft/world/entity/ai/behavior/Behavior$Status;
accessible method net/minecraft/world/entity/ai/behavior/Behavior hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z
extendable method net/minecraft/world/entity/ai/behavior/Behavior hasRequiredMemories (Lnet/minecraft/world/entity/LivingEntity;)Z
accessible field net/minecraft/world/entity/ai/behavior/GateBehavior behaviors Lnet/minecraft/world/entity/ai/behavior/ShufflingList;

# Sensor
accessible method net/minecraft/world/entity/ai/sensing/Sensor tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V
extendable method net/minecraft/world/entity/ai/sensing/Sensor tick (Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V
accessible field net/minecraft/world/entity/ai/sensing/Sensor scanRate I
accessible field net/minecraft/world/entity/ai/sensing/Sensor RANDOM Lnet/minecraft/util/RandomSource;

# World
accessible method net/minecraft/world/level/Level getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter;
accessible method net/minecraft/client/multiplayer/ClientLevel getEntities ()Lnet/minecraft/world/level/entity/LevelEntityGetter;

# Entities
accessible method net/minecraft/world/entity/Entity setSharedFlag (IZ)V