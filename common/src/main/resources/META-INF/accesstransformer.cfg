# Brain
public net.minecraft.world.entity.ai.Brain sensors
public net.minecraft.world.entity.ai.Brain memories
public net.minecraft.world.entity.ai.Brain activityRequirements
public net.minecraft.world.entity.ai.Brain activityMemoriesToEraseWhenStopped
public net.minecraft.world.entity.ai.behavior.Behavior entryCondition
public-f net.minecraft.world.entity.ai.Brain$Provider
public net.minecraft.world.entity.ai.Brain$Provider <init>(Ljava/util/Collection;Ljava/util/Collection;)V
public net.minecraft.world.entity.ai.Brain setMemoryInternal(Lnet/minecraft/world/entity/ai/memory/MemoryModuleType;Ljava/util/Optional;)V
public net.minecraft.world.entity.ai.Brain$MemoryValue setMemoryInternal(Lnet/minecraft/world/entity/ai/Brain;)V
public net.minecraft.world.entity.ai.Brain forgetOutdatedMemories()V
public net.minecraft.world.entity.ai.Brain coreActivities
public net.minecraft.world.entity.ai.Brain activeActivities
public net.minecraft.world.entity.ai.Brain availableBehaviorsByPriority
public net.minecraft.world.entity.ai.Brain activityRequirementsAreMet(Lnet/minecraft/world/entity/schedule/Activity;)Z
public net.minecraft.world.entity.ai.Brain setActiveActivity(Lnet/minecraft/world/entity/schedule/Activity;)V

# Behaviour
public-f net.minecraft.world.entity.ai.behavior.Behavior tryStart(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;J)Z
public net.minecraft.world.entity.ai.behavior.Behavior endTimestamp
public net.minecraft.world.entity.ai.behavior.Behavior status
public net.minecraft.world.entity.ai.behavior.Behavior hasRequiredMemories(Lnet/minecraft/world/entity/LivingEntity;)Z
public net.minecraft.world.entity.ai.behavior.GateBehavior behaviors

# Sensor
public-f net.minecraft.world.entity.ai.sensing.Sensor tick(Lnet/minecraft/server/level/ServerLevel;Lnet/minecraft/world/entity/LivingEntity;)V
public net.minecraft.world.entity.ai.sensing.Sensor scanRate
public net.minecraft.world.entity.ai.sensing.Sensor RANDOM

# World
public net.minecraft.world.level.Level getEntities()Lnet/minecraft/world/level/entity/LevelEntityGetter;
public net.minecraft.client.multiplayer.ClientLevel getEntities()Lnet/minecraft/world/level/entity/LevelEntityGetter;
public net.minecraft.server.level.ServerLevel getEntities()Lnet/minecraft/world/level/entity/LevelEntityGetter;
public net.minecraft.world.level.entity.LevelEntityGetterAdapter sectionStorage # sectionStorage
public net.minecraft.world.level.entity.EntitySectionStorage sectionIds # sectionIds
public net.minecraft.world.level.entity.EntitySection storage # storage

# Entities
public net.minecraft.world.entity.Entity setSharedFlag(IZ)V

# Schedule
public net.minecraft.world.entity.schedule.Schedule timelines

# Navigation
public-f net.minecraft.world.level.pathfinder.Path
public net.minecraft.world.level.pathfinder.Path nodes
public net.minecraft.world.entity.ai.navigation.GroundPathNavigation getSurfaceY()I
public net.minecraft.world.entity.ai.navigation.WaterBoundPathNavigation allowBreaching

# Other
public-f net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities nearbyEntities
public-f net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities lineOfSightTest
public net.minecraft.world.entity.ai.memory.NearestVisibleLivingEntities <init>()V