plugins {
    id 'org.quiltmc.loom' version '0.12+'
}

archivesBaseName = "${mod_name}-quilt-${minecraft_version}"

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-1.18.2:2022.11.06@zip")
    }
    modImplementation "org.quiltmc:quilt-loader:${project.quilt_loader_version}"
    modImplementation ("org.quiltmc.quilted-fabric-api:quilted-fabric-api:${quilted_fapi_version}-${minecraft_version}") {
        exclude group: "org.quiltmc", module:" qsl"
    }
    modImplementation ("org.quiltmc:qsl:${qsl_version}+${minecraft_version}") {
        exclude group: "net.fabricmc"
    }

    implementation project(":Common")
}

processResources {
    from project(":Common").sourceSets.main.resources
    inputs.property "version", project.version

    filesMatching('quilt.mod.json') {
        expand "version": version
    }
}

loom {
    runs {
        client {
            client()
            setConfigName("Quilt Client")
            ideConfigGenerated(true)
            runDir("run")
        }
        server {
            server()
            setConfigName("Quilt Server")
            ideConfigGenerated(true)
            runDir("run")
        }
    }

    mixin {
        defaultRefmapName.convention("${mod_id}.refmap.json")
    }

    accessWidenerPath = file("${project(':Common').projectDir.path}/src/main/resources/smartbrainlib.accesswidener")
}

tasks.withType(JavaCompile) {
    source(project(":Common").sourceSets.main.allSource)
}

sourcesJar {
    from(project(":Common").sourceSets.main.allSource)
}